{"version":3,"file":"static/js/main.c9156e8d.js","mappings":"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","sources":["src/Save/index.js","src/Socket/index.js","src/Rotas/index.js","src/Css/Entrada.js","src/DownloadImage/index.js","src/Home/Entrada.js","src/Css/Saida.js","src/Home/Saida.js","src/Login/Login.js","src/Login/ButtonSair/index.js","src/Login/Direção.js","src/Login/Escola.js","src/Login/Direção/AddEscola.js","src/Login/Direção/ValidarCarteirinha.js","App.js","src/Cripto/index.js","src/Gerador/index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nconst Load = async (ITEM) => {\r\n    const token = await AsyncStorage.getItem(ITEM);\r\n    return token;\r\n}\r\n\r\n\r\nconst Salvar = (LOGIN, SENHA, CONSOLE, ESCOLA ) => {\r\n\r\n    AsyncStorage.setItem(\"Login\", String(LOGIN))\r\n    AsyncStorage.setItem(\"Senha\", String(SENHA))\r\n    AsyncStorage.setItem(\"Console\", String(CONSOLE))\r\n    AsyncStorage.setItem(\"Escola\", String(ESCOLA))\r\n\r\n};\r\n\r\nconst Sair = () => {\r\n\r\n    AsyncStorage.removeItem(\"Login\")\r\n    AsyncStorage.removeItem(\"Senha\")\r\n    AsyncStorage.removeItem(\"Console\")\r\n    AsyncStorage.removeItem(\"Escola\")\r\n\r\n};\r\n\r\n\r\nexport default { Salvar, Load, Sair }","import { io } from 'socket.io-client';\r\n\r\nconst socket = io(`adjnet.up.railway.app`, {\r\n        transports: ['websocket'], // Especifica o transporte WebSocket\r\n        withCredentials: true, // Habilita o envio de cookies de origem cruzada\r\n        extraHeaders: {\r\n            \"my-custom-header\": \"value\" // Adiciona cabeçalhos personalizados, se necessário\r\n        }\r\n    });\r\n\r\n\r\n\r\nexport default { socket }","import { useEffect } from 'react';\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport Save from './../Save/index'\r\nimport { Criptografar, Descriptografar } from './../Cripto/index'\r\nimport { getData, getRandomInt } from './../Gerador/index'\r\nimport Socket from '../Socket';\r\n\r\nexport default function Rotas() {\r\n\r\n    const navigation = useNavigation();\r\n\r\n\r\n    async function Login() {\r\n        const Login = await Save.Load('Login')\r\n        const Senha = await Save.Load('Senha')\r\n        const Console = await Save.Load('Console')\r\n\r\n        if (Login && Senha && Console) {\r\n\r\n\r\n            Socket.socket.emit('Login', {\r\n                Code: Criptografar('9856325646516'),\r\n                Login: Criptografar(Login),\r\n                Senha: Criptografar(Senha),\r\n                Horas: Criptografar(getRandomInt()),\r\n                Data: Criptografar(getData()),\r\n            })\r\n\r\n\r\n            Socket.socket.on(`AccessLogin`, (data) => {\r\n                \r\n                if (Descriptografar(data.Code) === '98563256465') {\r\n\r\n                    if (Descriptografar(data.data) === 0) {\r\n                        setMensagem('Login ou senha inválidos!');\r\n                        setAtivador(true);\r\n                        setAtivadorButton(false)\r\n\r\n                    } else {\r\n\r\n                        if (Console === '0') {\r\n                            navigation.navigate('Home - Escolar')\r\n                        }\r\n                        if (Console === '1') {\r\n                            navigation.navigate('Home - Direção')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n\r\n        } else {\r\n\r\n            navigation.reset({\r\n\r\n                index: 0,\r\n                routes: [{ name: 'Login' }],\r\n\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => { Login() }, [])\r\n\r\n}","import { View, StyleSheet, Dimensions } from 'react-native';\r\nimport Cores from '../Cores/index.json'\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nexport default StyleSheet.create({\r\n\r\n    Input: {\r\n\r\n        backgroundColor: \"#FFF\",\r\n        borderRadius: 100,\r\n        textAlign: 'center',\r\n        borderColor: Cores.Button,\r\n        borderWidth: 4,\r\n        fontSize: RFValue(6),\r\n\r\n    },\r\n\r\n    Image: Dimensions.get('screen').height > Dimensions.get('screen').width ?\r\n        {\r\n\r\n            height: 0.60 * Dimensions.get(\"window\").height,\r\n            width: 0.60 * Dimensions.get(\"window\").width,\r\n            borderRadius: '20%',\r\n            marginTop: 20\r\n\r\n        }\r\n        :\r\n        {\r\n\r\n            height: '75%',\r\n            width: '25%',\r\n            borderRadius: '20%',\r\n\r\n\r\n        },\r\n\r\n    teste: {\r\n        alignItems: 'center',\r\n        marginTop: -0.95 * Dimensions.get(\"window\").height,\r\n\r\n\r\n    },\r\n    Total: {\r\n        flex: 1,\r\n    },\r\n    CorpoTotalView: {\r\n        marginLeft: 0.40 * Dimensions.get(\"window\").width,\r\n        marginTop: 0.20 * Dimensions.get(\"window\").height,\r\n        alignItems: 'center'\r\n    },\r\n    ViewNome: Dimensions.get('screen').height > Dimensions.get('screen').width ?\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.08 * Dimensions.get(\"window\").height,\r\n            width: 1 * Dimensions.get(\"window\").width,\r\n            maxWidth: '90%',\r\n            maxHeight: '9%',\r\n            borderRadius: 2000,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: 30,\r\n            marginTop: 20\r\n\r\n        }\r\n        :\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.08 * Dimensions.get(\"window\").height,\r\n            width: 0.60 * Dimensions.get(\"window\").width,\r\n            borderRadius: 2000,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: 30,\r\n            marginTop: 20\r\n\r\n        }\r\n    ,\r\n    TextNome: {\r\n        fontSize: RFValue(18),\r\n        fontWeight: 'bold',\r\n        color: \"#454545\",\r\n        textAlign: 'center'\r\n    },\r\n    ViewTurma: Dimensions.get('screen').height > Dimensions.get('screen').width ?\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.05 * Dimensions.get(\"window\").height,\r\n            width: 0.25 * Dimensions.get(\"window\").width,\r\n            maxWidth: '20%',\r\n            maxHeight: '50%',\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n   \r\n\r\n        }\r\n        :\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.08 * Dimensions.get(\"window\").height,\r\n            width: 0.12 * Dimensions.get(\"window\").width,\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            padding: 30,\r\n            alignItems: 'center',\r\n\r\n        }\r\n    ,\r\n    ViewEntrada: Dimensions.get('screen').height > Dimensions.get('screen').width ?\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.05 * Dimensions.get(\"window\").height,\r\n            width: 0.25 * Dimensions.get(\"window\").width,\r\n            maxWidth: '20%',\r\n            maxHeight: '50%',\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n\r\n        } :\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.08 * Dimensions.get(\"window\").height,\r\n            width: 0.12 * Dimensions.get(\"window\").width,\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            padding: 30,\r\n            marginLeft: 10,\r\n            alignItems: 'center',\r\n            marginLeft: 20\r\n        }\r\n    ,\r\n    ViewAtrasos: Dimensions.get('screen').height > Dimensions.get('screen').width ?\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.05 * Dimensions.get(\"window\").height,\r\n            width: 0.25 * Dimensions.get(\"window\").width,\r\n            maxWidth: '20%',\r\n            maxHeight: '50%',\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n\r\n\r\n        }\r\n        :\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.08 * Dimensions.get(\"window\").height,\r\n            width: 0.10 * Dimensions.get(\"window\").width,\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            padding: 30,\r\n            marginLeft: 10,\r\n            alignItems: 'center',\r\n            marginLeft: 20\r\n\r\n        }\r\n    ,\r\n    ViewTipo: Dimensions.get('screen').height > Dimensions.get('screen').width ?\r\n        {\r\n            backgroundColor: '#baffbf',\r\n            height: 0.05 * Dimensions.get(\"window\").height,\r\n            width: 0.25 * Dimensions.get(\"window\").width,\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n\r\n\r\n        }\r\n        :\r\n        {\r\n            backgroundColor: '#baffbf',\r\n            height: 0.08 * Dimensions.get(\"window\").height,\r\n            width: 0.10 * Dimensions.get(\"window\").width,\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            padding: 30,\r\n            marginLeft: 10,\r\n            alignItems: 'center',\r\n            marginLeft: 20\r\n\r\n        }\r\n    ,\r\n    TextTurma: {\r\n        fontSize: RFValue(12),\r\n        fontWeight: 'bold',\r\n        color: \"#454545\"\r\n    },\r\n    TextEntrada: {\r\n        fontSize: RFValue(12),\r\n        fontWeight: 'bold',\r\n        color: \"#454545\"\r\n    },\r\n    TextAtrasos: {\r\n        fontSize: RFValue(12),\r\n        fontWeight: 'bold',\r\n        color: \"#454545\"\r\n    },\r\n    TextTipo: {\r\n        fontSize: RFValue(12),\r\n        fontWeight: 'bold',\r\n        color: \"green\"\r\n    },\r\n    Atrasado: {\r\n        fontSize: RFValue(50),\r\n        fontWeight: 'bold',\r\n        \r\n    }\r\n\r\n\r\n})","import  { Audio } from 'expo-av';\r\n\r\n\r\n\r\n\r\n\r\nasync function AlunoNaoEncontrado(){\r\n\r\n  const { sound } =  await Audio.Sound.createAsync(require('./../Assets/Audio/02.mp3'));\r\n\r\n  console.log('Playing Sound');\r\n    await sound.playAsync();\r\n\r\n}\r\n\r\nasync function CarteirinhaVencida(){\r\n\r\n  const { sound } =  await Audio.Sound.createAsync(require('./../Assets/Audio/03.mp3'));\r\n\r\n  console.log('Playing Sound');\r\n    await sound.playAsync();\r\n\r\n}\r\n\r\nasync function CarteirinhaDuplicada(){\r\n\r\n  const { sound } =  await Audio.Sound.createAsync(require('./../Assets/Audio/01.mp3'));\r\n\r\n  console.log('Playing Sound');\r\n    await sound.playAsync();\r\n\r\n}\r\n\r\n\r\n\r\nexport default { AlunoNaoEncontrado, CarteirinhaVencida, CarteirinhaDuplicada }","import { View, Text, TextInput, ImageBackground, Dimensions, Image } from 'react-native';\r\nimport Estilo from '../Css/Entrada'\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { getData, getRandomInt } from '../Gerador/index'\r\nimport Socket from '../Socket/index'\r\nimport { Criptografar, Descriptografar } from './../Cripto/index'\r\nimport Download from './../DownloadImage/index'\r\nimport Save from '../Save';\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\n\r\n\r\n\r\nexport default function Home() {\r\n    const [foto, setFotos] = useState(null)\r\n    const [input, setInput] = useState('')\r\n    const [Horas, setHoras] = useState('--:--:--')\r\n    const [Nome, setNome] = useState('--:--:--')\r\n    const [Atrasos, setAtrasos] = useState('--:--:--')\r\n    const [Turma, setTurmas] = useState('--:--:--')\r\n    const [Ativador, setAtivador] = useState('')\r\n    const [duplicado, setDuplicado] = useState([])\r\n    const [ResetFotos, setResetFotos] = useState(false)\r\n    const navigation = useNavigation();\r\n    const [loop, setLoop] = useState(0)\r\n\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n\r\n        setTimeout(() => setLoop(loop + 1), 1000)\r\n\r\n        inputRef.current.focus();\r\n        restartServer()\r\n\r\n        if(loop !== 1200) return \r\n        \r\n        setHoras('--:--:--');\r\n        setNome('--:--:--');\r\n        setAtrasos('--:--:--');\r\n        setTurmas('--:--:--');\r\n        setFotos(null);\r\n        setAtivador('');\r\n        setLoop(0)\r\n\r\n    }, [loop])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        Receive()\r\n        async function Receive() {\r\n            Socket.socket.on(`EntradaResponse`, handleEntradaResponse);\r\n            Socket.socket.on(`CarteirinhaVencida`, handleCarteirinhaVencida);\r\n            Socket.socket.on(`AlunoNaoEncontrado`, handleAlunoNaoEncontrado);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const handleKeyPress = async ({ nativeEvent }) => {\r\n        if (nativeEvent.key === 'Enter') {\r\n\r\n            Socket.socket.emit('EntradaRequest', {\r\n                Code: Criptografar('9856334874'),\r\n                Codigo: Criptografar(input.length === 0 ? '9999999' : input),\r\n                Horas: Criptografar(getRandomInt()),\r\n                Data: Criptografar(getData()),\r\n                Escola: Criptografar(await Save.Load('Escola')),\r\n                Login: Criptografar(await Save.Load('Login'))\r\n            })\r\n\r\n            setInput('')\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const handleEntradaResponse = (data) => {\r\n        const Resultado = Descriptografar(data.Resultado)\r\n\r\n        if (Descriptografar(data.Code) === '9856321452') {\r\n\r\n            setHoras(getRandomInt());\r\n            setNome(Resultado[0].Aluno);\r\n            setAtrasos(Resultado[0].Atrasos);\r\n            setTurmas(Resultado[0].Turma);\r\n            setFotos(Resultado[0].Imagem);\r\n\r\n            if (duplicado.filter((c) => c.Codigo === Resultado[0].Codigo).length === 0) {\r\n                setDuplicado([...duplicado, { Codigo: Resultado[0].Codigo }]);\r\n            } else {\r\n                Download.CarteirinhaDuplicada();\r\n                setAtivador('DUPLICADA');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCarteirinhaVencida = (data) => {\r\n        const Resultado = Descriptografar(data.Resultado)\r\n        if (Descriptografar(data.Code) === '9856321451') {\r\n            Download.CarteirinhaVencida();\r\n            setHoras(getRandomInt());\r\n            setNome(Resultado[0].Aluno);\r\n            setAtrasos(Resultado[0].Atrasos);\r\n            setTurmas(Resultado[0].Turma);\r\n            setFotos(Resultado[0].Codigo);\r\n        }\r\n        setAtivador('VENCIDA');\r\n    };\r\n\r\n    const handleAlunoNaoEncontrado = (data) => {\r\n        if (Descriptografar(data.Code) === '9856321450') {\r\n            setHoras('--:--:--');\r\n            setNome('--:--:--');\r\n            setAtrasos('--:--:--');\r\n            setTurmas('--:--:--');\r\n            setFotos(null);\r\n            setAtivador('');\r\n            Download.AlunoNaoEncontrado();\r\n        }\r\n    };\r\n\r\n    function restartServer() {\r\n\r\n        var today = new Date()\r\n        const dayName = new Array(\"domingo\", \"segunda\", \"terça\", \"quarta\", \"quinta\", \"sexta\", \"sábado\")\r\n\r\n        var HoraAtual = (((today.getHours()) < 10 ? (\"0\" + (today.getHours())) : (today.getHours())) + \":\" + (today.getMinutes() < 10 ? (\"0\" + today.getMinutes()) : today.getMinutes()) + \":\" + (today.getSeconds() < 10 ? (\"0\" + today.getSeconds()) : today.getSeconds()));\r\n\r\n\r\n        if (dayName[today.getDay()] !== \"sábado\" && dayName[today.getDay()] !== \"domingo\") {\r\n            //console.log(`${HoraAtual !== '15:39:00'}  ${HoraAtual}`)\r\n            if (HoraAtual === '11:00:00' || HoraAtual === '17:00:00' || HoraAtual === '21:00:00') {\r\n                navigation.reset({\r\n\r\n                    index: 0,\r\n                    routes: [{ name: 'Saida' }],\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function RestartImagem() {\r\n\r\n\r\n        var today = new Date()\r\n        const dayName = new Array(\"domingo\", \"segunda\", \"terça\", \"quarta\", \"quinta\", \"sexta\", \"sábado\")\r\n\r\n        var HoraAtual = (((today.getHours()) < 10 ? (\"0\" + (today.getHours())) : (today.getHours())) + \":\" + (today.getMinutes() < 10 ? (\"0\" + today.getMinutes()) : today.getMinutes()) + \":\" + (today.getSeconds() < 10 ? (\"0\" + today.getSeconds()) : today.getSeconds()));\r\n\r\n\r\n        if (dayName[today.getDay()] !== \"sábado\" && dayName[today.getDay()] !== \"domingo\") {\r\n\r\n            if (HoraAtual === '7:30:00' || HoraAtual === '08:30:00' || HoraAtual === '09:30:00' || HoraAtual === '10:30:00') {\r\n                setResetFotos(true)\r\n            }\r\n            if (HoraAtual === '13:30:00' || HoraAtual === '14:30:00' || HoraAtual === '15:30:00' || HoraAtual === '16:30:00') {\r\n                setResetFotos(true)\r\n            }\r\n            if (HoraAtual === '19:30:00' || HoraAtual === '20:30:00') {\r\n                setResetFotos(true)\r\n            }\r\n            if (HoraAtual === '10:59:00' || HoraAtual === '16:59:00' || HoraAtual === '20:59:00') {\r\n                setResetFotos(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const screenDimensions = Dimensions.get('screen');\r\n    const windowDimensions = Dimensions.get('window');\r\n    const isPortrait = screenDimensions.height > screenDimensions.width;\r\n\r\n    const imageHeight = isPortrait ? 0.60 * windowDimensions.height : '75%';\r\n    const imageWidth = isPortrait ? 0.70 * windowDimensions.width : '25%';\r\n\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <ImageBackground source={require(\"./../Assets/Fundo.jpg\")} resizeMode='cover' style={{ flex: 4, alignItems: 'center', justifyContent: 'center' }} >\r\n            <Image\r\n                source={foto ? { uri: `data:image/jpeg;base64,${foto}` } : require('./../../Fotos/index.jpg')}\r\n                style={ { height: imageHeight, width: imageWidth }}\r\n                onError={() => {\r\n                    this.setState({\r\n                        fallback: require('./../../Fotos/index.jpg')\r\n                    });\r\n                }}\r\n            />\r\n\r\n                <View style={Estilo.ViewNome} >\r\n                    <Text style={Estilo.TextNome}>\r\n                        {Nome}\r\n                    </Text>\r\n                </View>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'space-around', maxWidth: '90%', marginBottom: 20 }}>\r\n                    <View style={Estilo.ViewTurma} >\r\n                        <Text style={Estilo.TextTurma}>\r\n                            {Turma}\r\n                        </Text>\r\n                    </View>\r\n                    <View style={Estilo.ViewEntrada} >\r\n                        <Text style={Estilo.TextEntrada}>\r\n                            {Horas}\r\n                        </Text>\r\n                    </View>\r\n                    <View style={Estilo.ViewAtrasos} >\r\n                        <Text style={Estilo.TextAtrasos}>\r\n                            {Atrasos}\r\n                        </Text>\r\n                    </View>\r\n                    <TouchableOpacity onPress={() => navigation.reset({index: 0, routes:[{ name: 'Saida' }]})} style={Estilo.ViewTipo} >\r\n                        <Text style={Estilo.TextTipo}>\r\n                            ENTRADA\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n\r\n                </View>\r\n            </ImageBackground>\r\n\r\n            <TextInput\r\n                ref={inputRef}\r\n                onChangeText={setInput}\r\n                onKeyPress={handleKeyPress}\r\n                value={input}\r\n            />\r\n        </View>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n","import { View, StyleSheet, Dimensions } from 'react-native';\r\nimport Cores from '../Cores/index.json'\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nexport default StyleSheet.create({\r\n\r\n    Input: {\r\n\r\n        backgroundColor: \"#FFF\",\r\n        borderRadius: 100,\r\n        textAlign: 'center',\r\n        borderColor: Cores.Button,\r\n        borderWidth: 4,\r\n        fontSize: RFValue(6),\r\n\r\n    },\r\n\r\n    Image: Dimensions.get('screen').height > Dimensions.get('screen').width ?\r\n        {\r\n\r\n            height: 0.60 * Dimensions.get(\"window\").height,\r\n            width: 0.60 * Dimensions.get(\"window\").width,\r\n            borderRadius: '20%',\r\n            marginTop: 20\r\n\r\n        }\r\n        :\r\n        {\r\n\r\n            height: '75%',\r\n            width: '25%',\r\n            borderRadius: '20%',\r\n\r\n\r\n        },\r\n\r\n    teste: {\r\n        alignItems: 'center',\r\n        marginTop: -0.95 * Dimensions.get(\"window\").height,\r\n\r\n\r\n    },\r\n    Total: {\r\n        flex: 1,\r\n    },\r\n    CorpoTotalView: {\r\n        marginLeft: 0.40 * Dimensions.get(\"window\").width,\r\n        marginTop: 0.20 * Dimensions.get(\"window\").height,\r\n        alignItems: 'center'\r\n    },\r\n    ViewNome: Dimensions.get('screen').height > Dimensions.get('screen').width ?\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.08 * Dimensions.get(\"window\").height,\r\n            width: 1 * Dimensions.get(\"window\").width,\r\n            maxWidth: '90%',\r\n            maxHeight: '9%',\r\n            borderRadius: 2000,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: 30,\r\n            marginTop: 20\r\n\r\n        }\r\n        :\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.08 * Dimensions.get(\"window\").height,\r\n            width: 0.60 * Dimensions.get(\"window\").width,\r\n            borderRadius: 2000,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: 30,\r\n            marginTop: 20\r\n\r\n        }\r\n    ,\r\n    TextNome: {\r\n        fontSize: RFValue(18),\r\n        fontWeight: 'bold',\r\n        color: \"#454545\",\r\n        textAlign: 'center'\r\n    },\r\n    ViewTurma: Dimensions.get('screen').height > Dimensions.get('screen').width ?\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.05 * Dimensions.get(\"window\").height,\r\n            width: 0.25 * Dimensions.get(\"window\").width,\r\n            maxWidth: '20%',\r\n            maxHeight: '50%',\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n   \r\n\r\n        }\r\n        :\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.08 * Dimensions.get(\"window\").height,\r\n            width: 0.12 * Dimensions.get(\"window\").width,\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            padding: 30,\r\n            alignItems: 'center',\r\n\r\n        }\r\n    ,\r\n    ViewEntrada: Dimensions.get('screen').height > Dimensions.get('screen').width ?\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.05 * Dimensions.get(\"window\").height,\r\n            width: 0.25 * Dimensions.get(\"window\").width,\r\n            maxWidth: '20%',\r\n            maxHeight: '50%',\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n\r\n        } :\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.08 * Dimensions.get(\"window\").height,\r\n            width: 0.12 * Dimensions.get(\"window\").width,\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            padding: 30,\r\n            marginLeft: 10,\r\n            alignItems: 'center',\r\n            marginLeft: 20\r\n        }\r\n    ,\r\n    ViewAtrasos: Dimensions.get('screen').height > Dimensions.get('screen').width ?\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.05 * Dimensions.get(\"window\").height,\r\n            width: 0.25 * Dimensions.get(\"window\").width,\r\n            maxWidth: '20%',\r\n            maxHeight: '50%',\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n\r\n\r\n        }\r\n        :\r\n        {\r\n            backgroundColor: \"#FFF\",\r\n            height: 0.08 * Dimensions.get(\"window\").height,\r\n            width: 0.10 * Dimensions.get(\"window\").width,\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            padding: 30,\r\n            marginLeft: 10,\r\n            alignItems: 'center',\r\n            marginLeft: 20\r\n\r\n        }\r\n    ,\r\n    ViewTipo: Dimensions.get('screen').height > Dimensions.get('screen').width ?\r\n        {\r\n            backgroundColor: '#fb9d9d',\r\n            height: 0.05 * Dimensions.get(\"window\").height,\r\n            width: 0.25 * Dimensions.get(\"window\").width,\r\n            maxWidth: '20%',\r\n            maxHeight: '50%',\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n\r\n\r\n        }\r\n        :\r\n        {\r\n            backgroundColor: '#fb9d9d',\r\n            height: 0.08 * Dimensions.get(\"window\").height,\r\n            width: 0.10 * Dimensions.get(\"window\").width,\r\n            borderRadius: 100,\r\n            marginTop: 20,\r\n            justifyContent: 'center',\r\n            padding: 30,\r\n            marginLeft: 10,\r\n            alignItems: 'center',\r\n            marginLeft: 20\r\n\r\n        }\r\n    ,\r\n    TextTurma: {\r\n        fontSize: RFValue(12),\r\n        fontWeight: 'bold',\r\n        color: \"#454545\"\r\n    },\r\n    TextEntrada: {\r\n        fontSize: RFValue(12),\r\n        fontWeight: 'bold',\r\n        color: \"#454545\"\r\n    },\r\n    TextAtrasos: {\r\n        fontSize: RFValue(12),\r\n        fontWeight: 'bold',\r\n        color: \"#454545\"\r\n    },\r\n    TextTipo: {\r\n        fontSize: RFValue(12),\r\n        fontWeight: 'bold',\r\n        color: \"red\"\r\n    },\r\n    Atrasado: {\r\n        fontSize: RFValue(50),\r\n        fontWeight: 'bold',\r\n        color: 'red'\r\n    }\r\n\r\n\r\n})","import { View, Text, TextInput, ImageBackground, Dimensions, TouchableOpacity, Image } from 'react-native';\r\nimport Estilo from '../Css/Saida'\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { getData, getRandomInt } from '../Gerador/index'\r\nimport { Criptografar, Descriptografar } from './../Cripto/index'\r\nimport Download from './../DownloadImage/index'\r\nimport Socket from '../Socket';\r\nimport Save from './../Save/index'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport Rotas from '../Rotas';\r\n\r\nexport default function Home() {\r\n    const [foto, setFotos] = useState('index')\r\n    const [input, setInput] = useState('')\r\n    const [Horas, setHoras] = useState('--:--:--')\r\n    const [Nome, setNome] = useState('--:--:--')\r\n    const [Atrasos, setAtrasos] = useState('--:--:--')\r\n    const [Turma, setTurmas] = useState('--:--:--')\r\n    const [loop, setLoop] = useState(0)\r\n    const navigation = useNavigation();\r\n\r\n    const inputRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setTimeout(() => setLoop(loop + 1), 1000)\r\n\r\n        inputRef.current.focus();\r\n        restartServer()\r\n\r\n        if (loop !== 1200) return\r\n\r\n        setHoras('--:--:--');\r\n        setNome('--:--:--');\r\n        setAtrasos('--:--:--');\r\n        setTurmas('--:--:--');\r\n        setFotos('');\r\n        setAtivador('');\r\n        setLoop(0)\r\n\r\n    }, [loop])\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        Saida()\r\n        async function Saida() {\r\n            Socket.socket.on(`SaidaResponse`, handlerSaidaResponse)\r\n            Socket.socket.on(`AlunoNaoEncontrado`, handlerAlunoNaoEncontrado)\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    const handleKeyPress = async ({ nativeEvent }) => {\r\n        if (nativeEvent.key === 'Enter') {\r\n\r\n\r\n            Socket.socket.emit('SaidaRequest', {\r\n                Code: Criptografar('9856334874'),\r\n                Codigo: Criptografar(input.length === 0 ? '9999999' : input),\r\n                Horas: Criptografar(getRandomInt()),\r\n                Data: Criptografar(getData()),\r\n                Escola: Criptografar(await Save.Load('Escola')),\r\n                Login: Criptografar(await Save.Load('Login'))\r\n            })\r\n\r\n\r\n            setInput('')\r\n        }\r\n    };\r\n\r\n\r\n    const handlerAlunoNaoEncontrado = ((data) => {\r\n        if (Descriptografar(data.Code) === '9856321450') {\r\n            setHoras('--:--:--')\r\n            setNome('--:--:--')\r\n            setAtrasos('--:--:--')\r\n            setTurmas('--:--:--')\r\n            setFotos('')\r\n            setAtivador('')\r\n            Download.AlunoNaoEncontrado();\r\n        }\r\n    })\r\n\r\n    const handlerSaidaResponse = ((data) => {\r\n        const Resultado = Descriptografar(data.Resultado)\r\n\r\n        if (Descriptografar(data.Code) === '9856321452') {\r\n\r\n            setHoras(getRandomInt())\r\n            setNome(Resultado[0].Aluno)\r\n            setAtrasos(Resultado[0].Atrasos)\r\n            setTurmas(Resultado[0].Turma);\r\n            setFotos(Resultado[0].Imagem);\r\n        }\r\n    })\r\n\r\n    function restartServer() {\r\n\r\n        var today = new Date()\r\n        const dayName = new Array(\"domingo\", \"segunda\", \"terça\", \"quarta\", \"quinta\", \"sexta\", \"sábado\")\r\n\r\n        var HoraAtual = (((today.getHours()) < 10 ? (\"0\" + (today.getHours())) : (today.getHours())) + \":\" + (today.getMinutes() < 10 ? (\"0\" + today.getMinutes()) : today.getMinutes()) + \":\" + (today.getSeconds() < 10 ? (\"0\" + today.getSeconds()) : today.getSeconds()));\r\n\r\n\r\n        if (dayName[today.getDay()] !== \"sábado\" && dayName[today.getDay()] !== \"domingo\") {\r\n            //console.log(`${HoraAtual !== '15:39:00'}  ${HoraAtual}`)\r\n            if (HoraAtual === '06:20:00' || HoraAtual === '12:20:00' || HoraAtual === '18:20:00') {\r\n                navigation.reset({\r\n\r\n                    index: 0,\r\n                    routes: [{ name: 'Entrada' }],\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n    const screenDimensions = Dimensions.get('screen');\r\n    const windowDimensions = Dimensions.get('window');\r\n    const isPortrait = screenDimensions.height > screenDimensions.width;\r\n\r\n    const imageHeight = isPortrait ? 0.60 * windowDimensions.height : '75%';\r\n    const imageWidth = isPortrait ? 0.70 * windowDimensions.width : '25%';\r\n\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <ImageBackground source={require(\"./../Assets/Fundo.jpg\")} resizeMode='cover' style={{ flex: 4, alignItems: 'center', justifyContent: 'center' }} >\r\n            <Image\r\n                source={foto ? { uri: `data:image/jpeg;base64,${foto}` } : require('./../../Fotos/index.jpg')}\r\n                style={ { height: imageHeight, width: imageWidth }}\r\n                onError={() => {\r\n                    this.setState({\r\n                        fallback: require('./../../Fotos/index.jpg')\r\n                    });\r\n                }}\r\n            />\r\n\r\n                <View style={Estilo.ViewNome} >\r\n                    <Text style={Estilo.TextNome}>\r\n                        {Nome}\r\n                    </Text>\r\n                </View>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'space-around', maxWidth: '90%', marginBottom: 20 }}>\r\n                    <View style={Estilo.ViewTurma} >\r\n                        <Text style={Estilo.TextTurma}>\r\n                            {Turma}\r\n                        </Text>\r\n                    </View>\r\n                    <View style={Estilo.ViewEntrada} >\r\n                        <Text style={Estilo.TextEntrada}>\r\n                            {Horas}\r\n                        </Text>\r\n                    </View>\r\n                    <View style={Estilo.ViewAtrasos} >\r\n                        <Text style={Estilo.TextAtrasos}>\r\n                            {Atrasos}\r\n                        </Text>\r\n                    </View>\r\n                    <TouchableOpacity onPress={() => navigation.reset({ index: 0, routes: [{ name: 'Entrada' }] })} style={Estilo.ViewTipo} >\r\n                        <Text style={Estilo.TextTipo}>\r\n                            SAIDA\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n\r\n                </View>\r\n            </ImageBackground>\r\n\r\n            <TextInput\r\n                ref={inputRef}\r\n                onChangeText={setInput}\r\n                onKeyPress={handleKeyPress}\r\n                value={input}\r\n            />\r\n        </View>\r\n    );\r\n}","import { View, ImageBackground, Dimensions, Text, TextInput, TouchableOpacity, Image, Modal, ActivityIndicator } from 'react-native';\r\nimport Estilo from './../Css/Entrada';\r\nimport { useEffect, useState } from 'react';\r\nimport { Criptografar, Descriptografar } from '../Cripto';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Save from './../Save/index';\r\nimport { getRandomInt, getData } from './../Gerador/index'\r\nimport Socket from '../Socket';\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const [Logins, setLogin] = useState('');\r\n    const [Senha, setSenha] = useState('');\r\n    const [Mensagem, setMensagem] = useState('');\r\n    const [ativador, setAtivador] = useState(false);\r\n    const [AtivadorButton, setAtivadorButton] = useState(false)\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const navigation = useNavigation();\r\n\r\n\r\n\r\n\r\n    function Login() {\r\n\r\n        setAtivador(false);\r\n        setAtivadorButton(true);\r\n\r\n        if (Logins.length === 0 || Senha.length === 0) {\r\n            setMensagem('Preencha os espaços em branco!');\r\n            setAtivador(true);\r\n            setAtivadorButton(false)\r\n        } else {\r\n\r\n            Socket.socket.emit('Login', {\r\n                Code: Criptografar('9856325646516'),\r\n                Login: Criptografar(Logins),\r\n                Senha: Criptografar(Senha),\r\n                Horas: Criptografar(getRandomInt()),\r\n                Data: Criptografar(getData()),\r\n\r\n            })\r\n\r\n\r\n\r\n            Socket.socket.on(`AccessLogin`, (data) => {\r\n\r\n                if (Descriptografar(data.Code) === '98563256465') {\r\n                    const BancoDeDados = Descriptografar(data.data)\r\n\r\n                    if (BancoDeDados === 0) {\r\n                        setModalVisible(true)\r\n\r\n                        setTimeout(() => {\r\n\r\n                            setMensagem('Login ou senha inválidos!');\r\n                            setAtivador(true);\r\n                            setAtivadorButton(false)\r\n                            setModalVisible(false)\r\n                            setLogin('')\r\n                            setSenha('')\r\n                        }, 2000)\r\n\r\n\r\n                    } else {\r\n\r\n                        if (BancoDeDados[0].Console === '0') {\r\n                            setTimeout(() => {\r\n                                setModalVisible(false)\r\n                                Save.Salvar(Logins, Senha, BancoDeDados[0].Console, BancoDeDados[0].Escola )\r\n                                navigation.navigate('Home - Escolar')\r\n                            }, 2000)\r\n                        }\r\n                        if (Descriptografar(data.data)[0].Console === '1') {\r\n                            setTimeout(() => {\r\n                                setModalVisible(false)\r\n                                Save.Salvar(Logins, Senha, BancoDeDados[0].Console, BancoDeDados[0].Escola)\r\n                                navigation.navigate('Home - Direção')\r\n                            }, 2000)\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={Estilo.Total}>\r\n            <View style={{ flex: 1, justifyContent: 'center' }}>\r\n                <ImageBackground source={require(\"./../Assets/Fundo.jpg\")} resizeMode='cover' style={{ flex: 1, alignItems: 'center', justifyContent: 'center', width: '100%' }} >\r\n                    <View style={{ height: 0.5 * Dimensions.get('window').height, width: 0.5 * Dimensions.get('window').width, backgroundColor: \"#FFF\", alignItems: 'center', justifyContent: 'center', borderTopLeftRadius: 99, borderBottomRightRadius: 99 }} >\r\n\r\n                        <Image\r\n\r\n                            style={{\r\n                                width: 100,\r\n                                height: 100,\r\n\r\n                            }}\r\n                            source={require('./../Assets/Logo.png')}\r\n\r\n                        />\r\n                        <Text style={{ fontSize: 25, marginBottom: 20 }}>\r\n                            Faça seu login\r\n                        </Text>\r\n\r\n                        <TextInput\r\n\r\n                            style={{\r\n                                height: 50,\r\n                                width: '60%',\r\n                                backgroundColor: \"#FFF\",\r\n                                borderRadius: 99,\r\n                                borderColor: '#8b8b8b',\r\n                                borderWidth: 1,\r\n                                textAlign: 'center',\r\n                                fontSize: 15\r\n                            }}\r\n                            placeholder='Digite seu login'\r\n                            placeholderTextColor={\"#8b8b8b\"}\r\n                            onChangeText={setLogin}\r\n                            value={Logins}\r\n\r\n                        />\r\n\r\n                        <TextInput\r\n\r\n                            style={{\r\n                                height: 50,\r\n                                width: '60%',\r\n                                backgroundColor: \"#FFF\",\r\n                                borderRadius: 99,\r\n                                borderColor: '#8b8b8b',\r\n                                borderWidth: 1,\r\n                                textAlign: 'center',\r\n                                fontSize: 15,\r\n                                marginTop: 10\r\n                            }}\r\n                            placeholder='Digite sua senha'\r\n                            placeholderTextColor={\"#8b8b8b\"}\r\n                            onChangeText={setSenha}\r\n                            secureTextEntry={true}\r\n                            value={Senha}\r\n\r\n                        />\r\n\r\n                        <TouchableOpacity disabled={AtivadorButton} onPress={Login} style={{\r\n                            height: 50,\r\n                            width: '60%',\r\n                            backgroundColor: AtivadorButton === true ? '#2e6089' : \"#4ba2dd\",\r\n                            borderRadius: 99,\r\n                            borderColor: '#8b8b8b',\r\n                            borderWidth: 1,\r\n                            textAlign: 'center',\r\n                            fontSize: 15,\r\n                            marginTop: 10,\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            <Text style={{ color: '#FFF', fontSize: 15 }}>\r\n                                Entrar\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n\r\n                        {ativador === true ?\r\n                            <Text style={{ fontSize: 15, marginBottom: 20, color: 'red', marginTop: 20 }}>\r\n                                {Mensagem}\r\n                            </Text>\r\n                            :\r\n\r\n                            <></>\r\n                        }\r\n\r\n\r\n                    </View>\r\n                </ImageBackground>\r\n\r\n            </View>\r\n\r\n\r\n            <Modal visible={modalVisible}>\r\n                <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n                    <View style={{\r\n                        backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n                        height: '100%',\r\n                        width: '100%',\r\n                        borderRadius: 10,\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        shadowColor: 'rgba(0, 0, 0, 0.2)',\r\n                        shadowOpacity: 0.8,\r\n                        elevation: 6,\r\n                        shadowRadius: 15,\r\n                        shadowOffset: { width: 4, height: 13 },\r\n\r\n                    }}>\r\n\r\n\r\n\r\n                        <ActivityIndicator style={{ height: 100, width: 100 }} size=\"large\" color={'blue'} />\r\n\r\n\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n\r\n\r\n        </View>\r\n    );\r\n}","import { View, Pressable, Text, Dimensions } from 'react-native';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { useEffect, useState } from 'react';\r\nimport Save from './../../Save/index'\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport default function ButtonSair() {\r\n    const [login, setLogin] = useState('');\r\n    const navigation = useNavigation();\r\n    const [repetidor, setRepetidor] = useState(0)\r\n\r\n    useEffect(() => {\r\n\r\n        setTimeout(()=>{\r\n            setRepetidor(repetidor + 1)\r\n        },1000)\r\n\r\n        Sair()\r\n        async function Sair(){\r\n            const Login = await Save.Load('Login')\r\n            if(Login){\r\n                setLogin(Login);\r\n            }\r\n        }\r\n\r\n    }, [repetidor])\r\n\r\n    function Logout(){\r\n        Save.Sair()\r\n        navigation.reset({\r\n\r\n            index: 0,\r\n            routes: [{ name: 'Login' }],\r\n\r\n        });\r\n    }\r\n\r\n return (\r\n    <View style={{backgroundColor: '#448eca', width: 0.5 * Dimensions.get('window').width, padding: 10, borderTopLeftRadius: 20, borderTopRightRadius: 20, flexDirection: 'row', alignItems: 'center'}}>\r\n    <MaterialCommunityIcons name=\"account\" size={30} color=\"#fff\" />\r\n    <Text style={{marginLeft: 10, color: '#FFF'}}>{login}</Text>\r\n    <Pressable onPress={Logout} style={{marginLeft: 10}}>\r\n        <Text style={{ color: '#FFF', fontWeight: 'bold'}}>\r\n            Sair\r\n        </Text>\r\n    </Pressable>\r\n</View>\r\n  );\r\n}","import { View, ImageBackground, Dimensions, Text, Pressable, Modal, ActivityIndicator } from 'react-native';\r\nimport Estilo from './../Css/Entrada';\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { useState } from 'react';\r\nimport Cabecalho from './../Login/ButtonSair/index'\r\n\r\n\r\nexport default function Login() {\r\n\r\n\r\n    const navigation = useNavigation();\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n\r\n    return (\r\n        <View style={Estilo.Total}>\r\n            <View style={{ flex: 1, justifyContent: 'center' }}>\r\n                <ImageBackground source={require(\"./../Assets/Fundo.jpg\")} resizeMode='cover' style={{ flex: 1, alignItems: 'center', justifyContent: 'center', width: '100%' }} >\r\n                    <Cabecalho />\r\n\r\n                    <View style={{ borderBottomLeftRadius: 20, borderBottomRightRadius: 20, height: 0.5 * Dimensions.get('window').height, width: 0.5 * Dimensions.get('window').width, backgroundColor: \"#FFF\", alignItems: 'center', justifyContent: 'center' }} >\r\n                        <Text style={{ fontSize: 25, marginBottom: 5, fontWeight: 'bold' }}>\r\n                            Escolha o que deseja acessar!\r\n                        </Text>\r\n                        <Text style={{ fontSize: 15, marginBottom: 40 }}>\r\n                            Clique para acessar\r\n                        </Text>\r\n                        <View style={{ width: '100%', justifyContent: 'space-around', flexDirection: 'row' }}>\r\n\r\n                            <Pressable onPress={() => {\r\n                                setModalVisible(true);\r\n                                setTimeout(() => {\r\n                                    navigation.navigate('Validar - Carteirinha')\r\n                                    setModalVisible(false);\r\n                                }, 2000)\r\n                            }\r\n\r\n                            } style={{\r\n                                backgroundColor: \"#fff\",\r\n                                height: 200,\r\n                                width: 200,\r\n                                borderRadius: 20,\r\n                                shadowColor: '#000',\r\n                                shadowOffset: {\r\n                                    height: 0,\r\n                                    width: 0\r\n                                },\r\n                                shadowOpacity: 0.5,\r\n                                shadowRadius: 5,\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <MaterialCommunityIcons name=\"smart-card-outline\" size={100} color=\"#448eca\" />\r\n                                <Text style={{ fontSize: 15 }}>\r\n                                    Validar Carteirinha\r\n                                </Text>\r\n                            </Pressable>\r\n\r\n\r\n\r\n                            <Pressable onPress={() => {\r\n                                setModalVisible(true);\r\n                                setTimeout(() => {\r\n                                    setModalVisible(false);\r\n                                    navigation.navigate('Adicionar Escola')\r\n                                }, 2000)\r\n\r\n                            }}\r\n                                style={{\r\n                                    backgroundColor: \"#fff\",\r\n                                    height: 200,\r\n                                    width: 200,\r\n                                    borderRadius: 20,\r\n                                    shadowColor: '#000',\r\n                                    shadowOffset: {\r\n                                        height: 0,\r\n                                        width: 0\r\n                                    },\r\n                                    shadowOpacity: 0.5,\r\n                                    shadowRadius: 5,\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center'\r\n                                }}>\r\n                                <MaterialCommunityIcons name=\"draw-pen\" size={100} color=\"#448eca\" />\r\n                                <Text style={{ fontSize: 15 }}>\r\n                                    Cadastrar escola\r\n                                </Text>\r\n                            </Pressable>\r\n\r\n\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n                </ImageBackground>\r\n\r\n            </View>\r\n\r\n            <Modal visible={modalVisible}>\r\n                <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n                    <View style={{\r\n                        backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n                        height: '100%',\r\n                        width: '100%',\r\n                        borderRadius: 10,\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        shadowColor: 'rgba(0, 0, 0, 0.2)',\r\n                        shadowOpacity: 0.8,\r\n                        elevation: 6,\r\n                        shadowRadius: 15,\r\n                        shadowOffset: { width: 4, height: 13 },\r\n\r\n                    }}>\r\n\r\n\r\n\r\n                        <ActivityIndicator style={{ height: 100, width: 100 }} size=\"large\" color={'blue'} />\r\n\r\n\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </View>\r\n    );\r\n}","import { View, ImageBackground, Dimensions, Text, Modal, ActivityIndicator, Pressable } from 'react-native';\r\nimport Estilo from './../Css/Entrada';\r\nimport { useState } from 'react';\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport Cabecalho from './ButtonSair/index'\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const navigation = useNavigation();\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    return (\r\n        <View style={Estilo.Total}>\r\n            <View style={{ flex: 1, justifyContent: 'center' }}>\r\n                <ImageBackground source={require(\"./../Assets/Fundo.jpg\")} resizeMode='cover' style={{ flex: 1, alignItems: 'center', justifyContent: 'center', width: '100%' }} >\r\n                    <Cabecalho/>\r\n                    <View style={{ borderBottomLeftRadius: 20, borderBottomRightRadius: 20, height: 0.5 * Dimensions.get('window').height, width: 0.5 * Dimensions.get('window').width, backgroundColor: \"#FFF\", alignItems: 'center', justifyContent: 'center' }} >\r\n                        <Text style={{ fontSize: 25, marginBottom: 5, fontWeight: 'bold' }}>\r\n                            Escolha o que deseja acessar!\r\n                        </Text>\r\n                        <Text style={{ fontSize: 15, marginBottom: 40 }}>\r\n                            Clique para acessar\r\n                        </Text>\r\n                        <View style={{ width: '100%', justifyContent: 'space-around', flexDirection: 'row' }}>\r\n                            <Pressable onPress={() => {\r\n                                setModalVisible(true);\r\n                                setTimeout(() => {\r\n                                    navigation.navigate('Entrada')\r\n                                    setModalVisible(false);\r\n                                }, 2000)\r\n                            }} style={{\r\n                                backgroundColor: \"#fff\",\r\n                                height: 200,\r\n                                width: 200,\r\n                                borderRadius: 20,\r\n                                shadowColor: '#000',\r\n                                shadowOffset: {\r\n                                    height: 0,\r\n                                    width: 0\r\n                                },\r\n                                shadowOpacity: 0.5,\r\n                                shadowRadius: 5,\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <MaterialCommunityIcons name=\"all-inclusive\" size={100} color=\"#448eca\" />\r\n                                <Text style={{ fontSize: 15 }}>\r\n                                    Entrada e Saida\r\n                                </Text>\r\n                            </Pressable>\r\n\r\n\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n                </ImageBackground>\r\n\r\n            </View>\r\n            <Modal visible={modalVisible}>\r\n                <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n                    <View style={{\r\n                        backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n                        height: '100%',\r\n                        width: '100%',\r\n                        borderRadius: 10,\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        shadowColor: 'rgba(0, 0, 0, 0.2)',\r\n                        shadowOpacity: 0.8,\r\n                        elevation: 6,\r\n                        shadowRadius: 15,\r\n                        shadowOffset: { width: 4, height: 13 },\r\n\r\n                    }}>\r\n\r\n\r\n\r\n                        <ActivityIndicator style={{ height: 100, width: 100 }} size=\"large\" color={'blue'} />\r\n\r\n\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n\r\n        </View>\r\n    );\r\n}","import { View, Text, ImageBackground, TouchableOpacity, Dimensions, TextInput, ActivityIndicator, Modal, Pressable } from 'react-native';\r\nimport { useState } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport './../../Css/App.css'\r\nimport Estilo from './../../Css/Entrada.js';\r\nimport { Criptografar, Descriptografar } from './../../Cripto/index.js'\r\nimport Cabecalho from './../ButtonSair/index.js'\r\nimport Socket from '../../Socket/index.js';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function App() {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [columnData, setColumnData] = useState(null);\r\n    const [Banco, setBanco] = useState([])\r\n    const [Mensagem, setMensagem] = useState('');\r\n    const [Ativador, setAtivador] = useState(false);\r\n    const [AtivadorButton, setAtivadorButton] = useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [ModalButton, setModalButton] = useState(false)\r\n    const [contador, setContador] = useState(0)\r\n    const [Salvar, setSalvar] = useState([])\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        setSelectedFile(file);\r\n\r\n        // Ler o arquivo Excel\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const data = new Uint8Array(e.target.result);\r\n            const workbook = XLSX.read(data, { type: 'array' });\r\n\r\n            // Extrair os dados da primeira planilha\r\n            const sheetName = workbook.SheetNames[0];\r\n            const sheet = workbook.Sheets[sheetName];\r\n\r\n            // Definir as colunas que você deseja extrair (Aqui exemplo A e B)\r\n            const columnsToExtract = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N'];\r\n            const extractedData = {};\r\n\r\n            columnsToExtract.forEach((col) => {\r\n                extractedData[col] = [];\r\n            });\r\n\r\n            // Iterar sobre as células da planilha e extrair os dados das colunas desejadas\r\n            Object.keys(sheet).forEach((cellAddress) => {\r\n                const col = cellAddress.charAt(0);\r\n                if (columnsToExtract.includes(col)) {\r\n                    extractedData[col].push(sheet[cellAddress].v);\r\n                }\r\n            });\r\n\r\n            // Definir os dados extraídos no estado\r\n            setColumnData(extractedData);\r\n        };\r\n\r\n        reader.readAsArrayBuffer(file);\r\n    };\r\n\r\n\r\n    async function rodar() {\r\n        setAtivadorButton(true)\r\n\r\n        const Identification = await AsyncStorage.getItem('Login')\r\n\r\n        for (let i = 1; i < columnData.A.length; i++) {\r\n            Banco.push({ Codigo: columnData.A[i], Senha: 'e73d9330d802247ffdbf57bbf707b746d4c1c8c4', Autorization: columnData.C[i], Aluno: columnData.D[i], Escola: columnData.E[i], Modalidade: columnData.F[i], Data: columnData.G[i], Turma: columnData.H[i], AnoSerie: columnData.I[i], Turno: columnData.J[i], Sexo: columnData.K[i], Ano: columnData.L[i], Atrasos: columnData.M[i], Entradas: columnData.N[i] })\r\n            setBanco([...Banco])\r\n        }\r\n\r\n\r\n\r\n        Socket.socket.emit('RegistrarEscola', {\r\n\r\n            Code: Criptografar('968545616547'),\r\n            Alunos: Criptografar(Banco),\r\n            Escola: Criptografar(columnData.E[1]),\r\n            Identification: Criptografar(Identification)\r\n\r\n        })\r\n\r\n\r\n        Socket.socket.on(`CriarDados${Identification}`, (data) => {\r\n            if (Descriptografar(data.Code) === '9956546546521') {\r\n\r\n                setAtivador(true)\r\n                setMensagem(\"AGUARDE UM MOMENTO, ESTAMOS CRIANDO UMA LISTA DE ALUNOS!\")\r\n                setModalVisible(true)\r\n\r\n            }\r\n        })\r\n\r\n        Socket.socket.on(`Contador${Identification}`, (data) => {\r\n            if (Descriptografar(data.Code) === '65435436554') {\r\n\r\n                setContador(Descriptografar(data.contador))\r\n\r\n            }\r\n        })\r\n\r\n        Socket.socket.on(`Finalizar${Identification}`, (data) => {\r\n            if (Descriptografar(data.Code) === '984854153165') {\r\n\r\n                setMensagem(\"PRONTO, Terminamos!\")\r\n                setModalButton(true)\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    function fechar() {\r\n        setModalVisible(false)\r\n        setAtivador(false)\r\n        setMensagem(\"\")\r\n        setModalVisible(false)\r\n        setColumnData(null)\r\n        setAtivadorButton(false)\r\n        setBanco([])\r\n        setSelectedFile(null)\r\n        setModalButton(false)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <View style={Estilo.Total}>\r\n            <View style={{ flex: 1, justifyContent: 'center' }}>\r\n                <ImageBackground source={require(\"./../../Assets/Fundo.jpg\")} resizeMode='cover' style={{ flex: 1, alignItems: 'center', justifyContent: 'center', width: '100%' }} >\r\n\r\n                    <Cabecalho />\r\n                    <View style={{ borderBottomLeftRadius: 20, borderBottomRightRadius: 20, height: 0.5 * Dimensions.get('window').height, width: 0.5 * Dimensions.get('window').width, backgroundColor: \"#FFF\", alignItems: 'center', justifyContent: 'center' }} >\r\n                        <Text style={{ fontSize: 25, marginBottom: 20, fontWeight: 'bold' }}>\r\n                            Selecione o arquivo excel.\r\n                        </Text>\r\n\r\n\r\n                        {columnData !== null ?\r\n                            <View style={{ width: '100%', flexDirection: 'column', alignItems: 'center' }}>\r\n\r\n                                <Text style={{ fontSize: 25, marginBottom: 10 }}>\r\n                                    Escola: {columnData.E[1]} encontrada!\r\n                                </Text>\r\n\r\n\r\n                                <Pressable disabled={AtivadorButton} onPress={rodar} style={{\r\n                                    height: 50,\r\n                                    width: '40%',\r\n                                    backgroundColor: AtivadorButton === true ? '#2e6089' : \"#4ba2dd\",\r\n                                    borderRadius: 99,\r\n                                    borderColor: '#8b8b8b',\r\n                                    borderWidth: 1,\r\n                                    fontSize: 15,\r\n                                    marginTop: 10,\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center'\r\n                                }}>\r\n                                    <Text style={{ fontSize: 16, color: '#FFF' }}>\r\n                                        Cadastrar\r\n                                    </Text>\r\n\r\n                                </Pressable>\r\n                            </View>\r\n                            :\r\n                            <div>\r\n                                <input id=\"file-upload\" className=\"custom-file-upload\" type=\"file\" onChange={handleFileChange} />\r\n                            </div>\r\n                        }\r\n\r\n\r\n                    </View>\r\n                </ImageBackground>\r\n            </View>\r\n\r\n\r\n\r\n\r\n            <Modal visible={modalVisible}>\r\n                <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n                    <View style={{\r\n                        backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n                        height: '100%',\r\n                        width: '100%',\r\n                        borderRadius: 10,\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        shadowColor: 'rgba(0, 0, 0, 0.2)',\r\n                        shadowOpacity: 0.8,\r\n                        elevation: 6,\r\n                        shadowRadius: 15,\r\n                        shadowOffset: { width: 4, height: 13 },\r\n\r\n                    }}>\r\n\r\n                        {Ativador === true ?\r\n\r\n                            <View>\r\n                                <Text style={{ fontSize: 20, marginBottom: 10, color: 'red', textAlign: 'center', width: 300 }}>\r\n                                    {Mensagem}\r\n                                </Text>\r\n                                {\r\n                                    contador > 0 ?\r\n                                        <Text style={{ fontSize: 20, color: 'red', textAlign: 'center', width: 300 }}>\r\n                                            {contador} / {Banco.length}\r\n                                        </Text>\r\n                                        :\r\n                                        <></>\r\n                                }\r\n                            </View>\r\n                            :\r\n                            <></>\r\n                        }\r\n\r\n                        {ModalButton === true ?\r\n\r\n                            <Pressable onPress={fechar} style={{\r\n                                height: 50,\r\n                                width: '40%',\r\n                                backgroundColor: \"#4ba2dd\",\r\n                                borderRadius: 99,\r\n                                borderColor: '#8b8b8b',\r\n                                borderWidth: 1,\r\n                                fontSize: 15,\r\n                                marginTop: 10,\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                <Text style={{ fontSize: 16, color: '#FFF' }}>\r\n                                    Finalizar\r\n                                </Text>\r\n\r\n                            </Pressable>\r\n\r\n                            :\r\n\r\n                            <ActivityIndicator style={{ height: 100, width: 100 }} size=\"large\" color={'blue'} />\r\n\r\n                        }\r\n\r\n\r\n\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n\r\n        </View>\r\n    );\r\n\r\n\r\n}","import { View, Text, TextInput, ImageBackground, Dimensions } from 'react-native';\r\nimport { useState, useRef } from 'react';\r\nimport { Criptografar, Descriptografar } from './../../Cripto/index'\r\nimport Cabecalho from './../ButtonSair/index'\r\nimport { getAno } from './../../Gerador/index'\r\nimport Socket from '../../Socket';\r\n\r\n\r\nexport default function Home() {\r\n  const [input, setInput] = useState('')\r\n  const inputRef = useRef(null);\r\n  const [Alertas, setAlertas] = useState({ Mensagem: '', Ativador: false })\r\n\r\n\r\n  setInterval(() => {\r\n    inputRef.current.focus();\r\n\r\n\r\n  }, 200)\r\n\r\n  const handleKeyPress = ({ nativeEvent }) => {\r\n    if (nativeEvent.key === 'Enter') {\r\n\r\n      Socket.socket.emit('Validar', {\r\n        Code: Criptografar('1651653203'),\r\n        Codigo: Criptografar(input.length === 0 ? '9999999' : input),\r\n        Data: Criptografar(getAno() + '-03-30')\r\n\r\n      })\r\n\r\n\r\n      Socket.socket.on('CarteirinhaAtualizada', (data) => {\r\n        if (Descriptografar(data.Code) === '98798456132') {\r\n\r\n          setAlertas({ Mensagem: \"Carteirinha validada com sucesso!\", Ativador: true })\r\n\r\n        }\r\n\r\n      })\r\n\r\n      Socket.socket.on('AlunoNaoEncontrado', (data) => {\r\n        if (Descriptografar(data.Code) === '5456456465654') {\r\n\r\n          setAlertas({ Mensagem: \"Aluno não encontrado!\", Ativador: true })\r\n\r\n        }\r\n\r\n      })\r\n\r\n      Socket.socket.on('CarteirinhaJaValidada', (data) => {\r\n        if (Descriptografar(data.Code) === '65486749848965') {\r\n\r\n          setAlertas({ Mensagem: \"Esta carteirinha ja foi validada!\", Ativador: true })\r\n\r\n        }\r\n      })\r\n\r\n      setInput('')\r\n\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <ImageBackground source={require(\"./../../Assets/Fundo.jpg\")} resizeMode='cover' style={{ flex: 4, alignItems: 'center', justifyContent: 'center' }} >\r\n        <Cabecalho />\r\n        <View style={{ borderBottomLeftRadius: 20, borderBottomRightRadius: 20, height: 0.5 * Dimensions.get('window').height, width: 0.5 * Dimensions.get('window').width, backgroundColor: \"#FFF\", alignItems: 'center', justifyContent: 'center' }} >\r\n\r\n\r\n          <Text style={{ fontSize: 25, marginBottom: 5, textAlign: 'center', width: 0.30 * Dimensions.get('window').width, fontWeight: 'bold', color: '#448eca' }}>\r\n            Validação das carteirinhas.\r\n          </Text>\r\n          <Text style={{ fontSize: 13, marginBottom: 30 }}>\r\n            Digite o codigo para validar\r\n          </Text>\r\n          {\r\n            Alertas.Ativador === true ?\r\n              <Text style={{ fontSize: 16, marginBottom: 20, textAlign: 'center', width: 0.40 * Dimensions.get('window').width, color: 'red' }}>\r\n                {Alertas.Mensagem}\r\n              </Text>\r\n\r\n              :\r\n\r\n              <></>\r\n          }\r\n          <TextInput\r\n            style={{\r\n              height: 50,\r\n              width: '60%',\r\n              backgroundColor: \"#FFF\",\r\n              borderRadius: 99,\r\n              borderColor: '#8b8b8b',\r\n              borderWidth: 1,\r\n              textAlign: 'center',\r\n              fontSize: 15\r\n            }}\r\n            ref={inputRef}\r\n            onChangeText={setInput}\r\n            onKeyPress={handleKeyPress}\r\n            value={input}\r\n            placeholder='Codigo do aluno'\r\n            placeholderTextColor={\"#8b8b8b\"}\r\n          />\r\n        </View>\r\n      </ImageBackground>\r\n\r\n\r\n\r\n\r\n    </View>\r\n  );\r\n}","import 'react-native-gesture-handler';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nimport Rotas from './src/Rotas/index.js'\r\nimport Entrada from './src/Home/Entrada.js'\r\nimport Saida from './src/Home/Saida.js'\r\nimport Login from './src/Login/Login.js';\r\nimport Direction from './src/Login/Direção.js';\r\nimport Escola from './src/Login/Escola.js';\r\nimport ADDEscola from './src/Login/Direção/AddEscola.js'\r\nimport ValidarCarteirinha from './src/Login/Direção/ValidarCarteirinha.js'\r\n\r\n\r\n\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        <Stack.Screen name=\"Rotas\" component={Rotas} />\r\n        <Stack.Screen name=\"Entrada\" component={Entrada} />\r\n        <Stack.Screen name=\"Saida\" component={Saida} />\r\n        <Stack.Screen name=\"Login\" component={Login} />\r\n        <Stack.Screen name=\"Home - Direção\" component={Direction} />\r\n        <Stack.Screen name=\"Home - Escolar\" component={Escola} />\r\n        <Stack.Screen name=\"Adicionar Escola\" component={ADDEscola} />\r\n        <Stack.Screen name=\"Validar - Carteirinha\" component={ValidarCarteirinha} />\r\n\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n","var CryptoJS = require(\"crypto-js\");\r\nvar base64 = require('base-64');\r\n\r\n\r\nfunction Descriptografar(MENSAGEM) {\r\n\r\n    return JSON.parse(CryptoJS.AES.decrypt(base64.decode(MENSAGEM), \"a53650a05d0c2d20b93433e828e2ab79f89d3f2669b82dbcba9a560b186dad8fa7701eda833a7b7994eda0538260d4c870f0c273248bbcd69fb34ac10a1bc11e\").toString(CryptoJS.enc.Utf8))\r\n}\r\nfunction Criptografar(MENSAGEM) {\r\n\r\n    return base64.encode(CryptoJS.AES.encrypt(JSON.stringify(MENSAGEM), \"a53650a05d0c2d20b93433e828e2ab79f89d3f2669b82dbcba9a560b186dad8fa7701eda833a7b7994eda0538260d4c870f0c273248bbcd69fb34ac10a1bc11e\"))\r\n}\r\n\r\n\r\n\r\n\r\nmodule.exports = { Criptografar, Descriptografar }","\r\nmonName = new Array(\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\")\r\n\r\nlet today = new Date()\r\n\r\n\r\nfunction getRandomInt(){\r\n    today = new Date()\r\n    return ((today.getHours()) < 10 ? '0' + (today.getHours()) : (today.getHours())) + \":\" + (today.getMinutes() < 10 ? '0' + today.getMinutes() : today.getMinutes()) + \":\" + (today.getSeconds() < 10 ? '0' + today.getSeconds() : today.getSeconds())\r\n}\r\n\r\nfunction getData(){\r\n    today = new Date()\r\n    return ((today.getFullYear())+\"-\"+(monName[today.getMonth()])+\"-\"+(today.getDate() < 10 ? '0' + today.getDate() : today.getDate() ))\r\n}\r\n\r\nfunction getAno(){\r\n    today = new Date()\r\n    return (today.getFullYear())\r\n}\r\n\r\n\r\nmodule.exports = { getRandomInt, getData, getAno }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [835], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Salvar","LOGIN","SENHA","CONSOLE","ESCOLA","AsyncStorage","setItem","String","Load","async","getItem","ITEM","Sair","removeItem","socket","io","transports","withCredentials","extraHeaders","Rotas","navigation","useNavigation","useEffect","Login","Save","Senha","Console","Socket","emit","Code","Criptografar","Horas","getRandomInt","Data","getData","on","data","Descriptografar","setMensagem","setAtivador","setAtivadorButton","navigate","reset","index","routes","name","StyleSheet","create","Input","backgroundColor","borderRadius","textAlign","borderColor","Cores","borderWidth","fontSize","RFValue","Image","Dimensions","get","height","width","marginTop","teste","alignItems","Total","flex","CorpoTotalView","marginLeft","ViewNome","maxWidth","maxHeight","justifyContent","padding","TextNome","fontWeight","color","ViewTurma","ViewEntrada","ViewAtrasos","ViewTipo","TextTurma","TextEntrada","TextAtrasos","TextTipo","Atrasado","AlunoNaoEncontrado","sound","Audio","createAsync","require","console","log","playAsync","CarteirinhaVencida","CarteirinhaDuplicada","Home","_this","_useState","useState","_useState2","_slicedToArray","foto","setFotos","_useState3","_useState4","input","setInput","_useState5","_useState6","setHoras","_useState7","_useState8","Nome","setNome","_useState9","_useState10","Atrasos","setAtrasos","_useState11","_useState12","Turma","setTurmas","_useState13","_useState14","_useState15","_useState16","duplicado","setDuplicado","_useState17","_useState18","_useState19","_useState20","loop","setLoop","inputRef","useRef","setTimeout","current","focus","today","Date","dayName","Array","HoraAtual","getHours","getMinutes","getSeconds","getDay","restartServer","_Receive","_asyncToGenerator","handleEntradaResponse","handleCarteirinhaVencida","handleAlunoNaoEncontrado","apply","arguments","Receive","handleKeyPress","_ref2","_ref","nativeEvent","key","Codigo","length","Escola","_x","Resultado","Aluno","Imagem","filter","c","concat","_toConsumableArray","Download","screenDimensions","windowDimensions","isPortrait","imageHeight","imageWidth","_jsxs","View","style","children","ImageBackground","source","resizeMode","_jsx","uri","onError","setState","fallback","Estilo","Text","flexDirection","marginBottom","TouchableOpacity","onPress","TextInput","ref","onChangeText","onKeyPress","value","_Saida","handlerSaidaResponse","handlerAlunoNaoEncontrado","Saida","Logins","setLogin","setSenha","Mensagem","ativador","AtivadorButton","modalVisible","setModalVisible","borderTopLeftRadius","borderBottomRightRadius","placeholder","placeholderTextColor","secureTextEntry","disabled","BancoDeDados","_Fragment","Modal","visible","shadowColor","shadowOpacity","elevation","shadowRadius","shadowOffset","ActivityIndicator","size","ButtonSair","login","repetidor","setRepetidor","borderTopRightRadius","MaterialCommunityIcons","Pressable","Cabecalho","borderBottomLeftRadius","App","selectedFile","setSelectedFile","columnData","setColumnData","Banco","setBanco","Ativador","ModalButton","setModalButton","contador","setContador","setSalvar","E","Identification","i","A","push","Autorization","C","D","Modalidade","F","G","H","AnoSerie","I","Turno","J","Sexo","K","Ano","L","M","Entradas","N","Alunos","id","className","type","onChange","event","file","target","files","reader","FileReader","onload","e","Uint8Array","result","workbook","XLSX","sheetName","SheetNames","sheet","Sheets","columnsToExtract","extractedData","forEach","col","Object","keys","cellAddress","charAt","includes","v","readAsArrayBuffer","Alertas","setAlertas","setInterval","getAno","Stack","createStackNavigator","NavigationContainer","Navigator","screenOptions","headerShown","Screen","component","Entrada","Direction","ADDEscola","ValidarCarteirinha","CryptoJS","base64","module","exports","MENSAGEM","encode","AES","encrypt","JSON","stringify","parse","decrypt","decode","toString","enc","Utf8","monName","getFullYear","getMonth","getDate","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}